{"version":3,"file":"ngtools_api.js","sourceRoot":"","sources":["../../../../packages/compiler-cli/src/ngtools_api.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG;;AAkBH,gEAAmE;AACnE,8DAA0D;AA6C1D;;;GAGG;AACH;IACE;;OAEG;IACH,MAAM,CAAC,OAAO,CAAC,OAAgD;QAC7D,MAAM,sBAAsB,EAAE,CAAC;IACjC,CAAC;IAED;;OAEG;IACH,MAAM,CAAC,cAAc,CAAC,OAAuD;QAE3E,0EAA0E;QAC1E,2DAA2D;QAC3D,MAAM,SAAS,GAAG,4BAAa,CAAC;YAC9B,SAAS,EAAE,OAAO,CAAC,OAAO,CAAC,gBAAgB,EAAE;YAC7C,OAAO,oBAAM,OAAO,CAAC,sBAAsB,IAAE,gBAAgB,EAAE,IAAI,GAAC;YACpE,IAAI,EAAE,OAAO,CAAC,IAAI;SACnB,CAAC,CAAC;QACH,MAAM,UAAU,GAAG,SAAS,CAAC,cAAc,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;QAEjE,yEAAyE;QACzE,iDAAiD;QACjD,GAAG,CAAC,CAAC,MAAM,UAAU,IAAI,OAAO,CAAC,OAAO,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC;YAC1D,MAAM,kBAAkB,GAAG,qCAAqB,CAAC,UAAU,CAAC,CAAC;YAC7D,EAAE,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC;gBACvB,UAAU,CAAC,eAAe,GAAG,kBAAkB,CAAC;YAClD,CAAC;QACH,CAAC;QAED,MAAM,MAAM,GAA0C,EAAE,CAAC;QACzD,UAAU,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE;YAC7B,MAAM,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC;YAC9B,MAAM,kBAAkB,GAAG,SAAS,CAAC,gBAAgB,CAAC,QAAQ,CAAC;YAC/D,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,MAAM,CAAC,KAAK,CAAC,IAAI,kBAAkB,CAAC,CAAC,CAAC;gBACzD,MAAM,IAAI,KAAK,CACX,8CAA8C,KAAK,+BAA+B;oBAClF,yCAAyC,MAAM,CAAC,KAAK,CAAC,OAAO;oBAC7D,IAAI,kBAAkB,8DAA8D;oBACpF,sBAAsB,CAAC,CAAC;YAC9B,CAAC;YACD,MAAM,CAAC,KAAK,CAAC,GAAG,kBAAkB,CAAC;QACrC,CAAC,CAAC,CAAC;QAEH,MAAM,CAAC,MAAM,CAAC;IAChB,CAAC;IAED;;OAEG;IACH,MAAM,CAAC,WAAW,CAAC,OAAoD;QACrE,MAAM,sBAAsB,EAAE,CAAC;IACjC,CAAC;CACF;AAtDD,4DAsDC;AAED;IACE,MAAM,IAAI,KAAK,CAAC,2EAA2E,CAAC,CAAC;AAC/F,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * This is a private API for the ngtools toolkit.\n *\n * This API should be stable for NG 2. It can be removed in NG 4..., but should be replaced by\n * something else.\n */\n\n/**\n *********************************************************************\n * Changes to this file need to be approved by the Angular CLI team. *\n *********************************************************************\n */\n\nimport * as ts from 'typescript';\n\nimport {CompilerHost, CompilerOptions, LazyRoute} from './transformers/api';\nimport {getOriginalReferences} from './transformers/compiler_host';\nimport {createProgram} from './transformers/entry_points';\n\nexport interface NgTools_InternalApi_NG2_CodeGen_Options {\n  basePath: string;\n  compilerOptions: ts.CompilerOptions;\n  program: ts.Program;\n  host: ts.CompilerHost;\n\n  angularCompilerOptions: CompilerOptions;\n\n  // i18n options.\n  i18nFormat?: string;\n  i18nFile?: string;\n  locale?: string;\n  missingTranslation?: string;\n\n  readResource: (fileName: string) => Promise<string>;\n\n  // Every new property under this line should be optional.\n}\n\nexport interface NgTools_InternalApi_NG2_ListLazyRoutes_Options {\n  program: ts.Program;\n  host: ts.CompilerHost;\n  angularCompilerOptions: CompilerOptions;\n  entryModule: string;\n\n  // Every new property under this line should be optional.\n}\n\nexport interface NgTools_InternalApi_NG_2_LazyRouteMap { [route: string]: string; }\n\nexport interface NgTools_InternalApi_NG2_ExtractI18n_Options {\n  basePath: string;\n  compilerOptions: ts.CompilerOptions;\n  program: ts.Program;\n  host: ts.CompilerHost;\n  angularCompilerOptions: CompilerOptions;\n  i18nFormat?: string;\n  readResource: (fileName: string) => Promise<string>;\n  // Every new property under this line should be optional.\n  locale?: string;\n  outFile?: string;\n}\n\n/**\n * @internal\n * @deprecatd Use ngtools_api2 instead!\n */\nexport class NgTools_InternalApi_NG_2 {\n  /**\n   * @internal\n   */\n  static codeGen(options: NgTools_InternalApi_NG2_CodeGen_Options): Promise<any> {\n    throw throwNotSupportedError();\n  }\n\n  /**\n   * @internal\n   */\n  static listLazyRoutes(options: NgTools_InternalApi_NG2_ListLazyRoutes_Options):\n      NgTools_InternalApi_NG_2_LazyRouteMap {\n    // TODO(tbosch): Also throwNotSupportedError once Angular CLI 1.5.1 ships,\n    // as we only needed this to support Angular CLI 1.5.0 rc.*\n    const ngProgram = createProgram({\n      rootNames: options.program.getRootFileNames(),\n      options: {...options.angularCompilerOptions, collectAllErrors: true},\n      host: options.host\n    });\n    const lazyRoutes = ngProgram.listLazyRoutes(options.entryModule);\n\n    // reset the referencedFiles that the ng.Program added to the SourceFiles\n    // as the host might be caching the source files!\n    for (const sourceFile of options.program.getSourceFiles()) {\n      const originalReferences = getOriginalReferences(sourceFile);\n      if (originalReferences) {\n        sourceFile.referencedFiles = originalReferences;\n      }\n    }\n\n    const result: NgTools_InternalApi_NG_2_LazyRouteMap = {};\n    lazyRoutes.forEach(lazyRoute => {\n      const route = lazyRoute.route;\n      const referencedFilePath = lazyRoute.referencedModule.filePath;\n      if (result[route] && result[route] != referencedFilePath) {\n        throw new Error(\n            `Duplicated path in loadChildren detected: \"${route}\" is used in 2 loadChildren, ` +\n            `but they point to different modules \"(${result[route]} and ` +\n            `\"${referencedFilePath}\"). Webpack cannot distinguish on context and would fail to ` +\n            'load the proper one.');\n      }\n      result[route] = referencedFilePath;\n    });\n\n    return result;\n  }\n\n  /**\n   * @internal\n   */\n  static extractI18n(options: NgTools_InternalApi_NG2_ExtractI18n_Options): Promise<any> {\n    throw throwNotSupportedError();\n  }\n}\n\nfunction throwNotSupportedError() {\n  throw new Error(`Please update @angular/cli. Angular 5+ requires at least Angular CLI 1.5+`);\n}\n"]}