/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
/**
 * Describes the kind of identifier found in a template.
 */
export var IdentifierKind;
(function (IdentifierKind) {
    IdentifierKind[IdentifierKind["Property"] = 0] = "Property";
    IdentifierKind[IdentifierKind["Method"] = 1] = "Method";
    IdentifierKind[IdentifierKind["Element"] = 2] = "Element";
    IdentifierKind[IdentifierKind["Template"] = 3] = "Template";
    IdentifierKind[IdentifierKind["Attribute"] = 4] = "Attribute";
    IdentifierKind[IdentifierKind["Reference"] = 5] = "Reference";
    IdentifierKind[IdentifierKind["Variable"] = 6] = "Variable";
})(IdentifierKind || (IdentifierKind = {}));
/**
 * Describes the absolute byte offsets of a text anchor in a source code.
 */
export class AbsoluteSourceSpan {
    constructor(start, end) {
        this.start = start;
        this.end = end;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBpLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vcGFja2FnZXMvY29tcGlsZXItY2xpL3NyYy9uZ3RzYy9pbmRleGVyL3NyYy9hcGkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztHQU1HO0FBS0g7O0dBRUc7QUFDSCxNQUFNLENBQU4sSUFBWSxjQVFYO0FBUkQsV0FBWSxjQUFjO0lBQ3hCLDJEQUFRLENBQUE7SUFDUix1REFBTSxDQUFBO0lBQ04seURBQU8sQ0FBQTtJQUNQLDJEQUFRLENBQUE7SUFDUiw2REFBUyxDQUFBO0lBQ1QsNkRBQVMsQ0FBQTtJQUNULDJEQUFRLENBQUE7QUFDVixDQUFDLEVBUlcsY0FBYyxLQUFkLGNBQWMsUUFRekI7QUE0RkQ7O0dBRUc7QUFDSCxNQUFNLE9BQU8sa0JBQWtCO0lBQzdCLFlBQW1CLEtBQWEsRUFBUyxHQUFXO1FBQWpDLFVBQUssR0FBTCxLQUFLLENBQVE7UUFBUyxRQUFHLEdBQUgsR0FBRyxDQUFRO0lBQUcsQ0FBQztDQUN6RCIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCBHb29nbGUgTExDIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9hbmd1bGFyLmlvL2xpY2Vuc2VcbiAqL1xuXG5pbXBvcnQge1BhcnNlU291cmNlRmlsZX0gZnJvbSAnQGFuZ3VsYXIvY29tcGlsZXInO1xuaW1wb3J0IHtDbGFzc0RlY2xhcmF0aW9uLCBEZWNsYXJhdGlvbk5vZGV9IGZyb20gJy4uLy4uL3JlZmxlY3Rpb24nO1xuXG4vKipcbiAqIERlc2NyaWJlcyB0aGUga2luZCBvZiBpZGVudGlmaWVyIGZvdW5kIGluIGEgdGVtcGxhdGUuXG4gKi9cbmV4cG9ydCBlbnVtIElkZW50aWZpZXJLaW5kIHtcbiAgUHJvcGVydHksXG4gIE1ldGhvZCxcbiAgRWxlbWVudCxcbiAgVGVtcGxhdGUsXG4gIEF0dHJpYnV0ZSxcbiAgUmVmZXJlbmNlLFxuICBWYXJpYWJsZSxcbn1cblxuLyoqXG4gKiBEZXNjcmliZXMgYSBzZW1hbnRpY2FsbHktaW50ZXJlc3RpbmcgaWRlbnRpZmllciBpbiBhIHRlbXBsYXRlLCBzdWNoIGFzIGFuIGludGVycG9sYXRlZCB2YXJpYWJsZVxuICogb3Igc2VsZWN0b3IuXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgVGVtcGxhdGVJZGVudGlmaWVyIHtcbiAgbmFtZTogc3RyaW5nO1xuICBzcGFuOiBBYnNvbHV0ZVNvdXJjZVNwYW47XG4gIGtpbmQ6IElkZW50aWZpZXJLaW5kO1xufVxuXG4vKiogRGVzY3JpYmVzIGEgdGVtcGxhdGUgZXhwcmVzc2lvbiwgd2hpY2ggbWF5IGhhdmUgYSB0ZW1wbGF0ZSByZWZlcmVuY2Ugb3IgdmFyaWFibGUgdGFyZ2V0LiAqL1xuaW50ZXJmYWNlIEV4cHJlc3Npb25JZGVudGlmaWVyIGV4dGVuZHMgVGVtcGxhdGVJZGVudGlmaWVyIHtcbiAgLyoqXG4gICAqIFJlZmVyZW5jZUlkZW50aWZpZXIgb3IgVmFyaWFibGVJZGVudGlmaWVyIGluIHRoZSB0ZW1wbGF0ZSB0aGF0IHRoaXMgaWRlbnRpZmllciB0YXJnZXRzLCBpZlxuICAgKiBhbnkuIElmIHRoZSB0YXJnZXQgaXMgYG51bGxgLCBpdCBwb2ludHMgdG8gYSBkZWNsYXJhdGlvbiBvbiB0aGUgY29tcG9uZW50IGNsYXNzLlxuICAgKiAqL1xuICB0YXJnZXQ6IFJlZmVyZW5jZUlkZW50aWZpZXJ8VmFyaWFibGVJZGVudGlmaWVyfG51bGw7XG59XG5cbi8qKiBEZXNjcmliZXMgYSBwcm9wZXJ0eSBhY2Nlc3NlZCBpbiBhIHRlbXBsYXRlLiAqL1xuZXhwb3J0IGludGVyZmFjZSBQcm9wZXJ0eUlkZW50aWZpZXIgZXh0ZW5kcyBFeHByZXNzaW9uSWRlbnRpZmllciB7XG4gIGtpbmQ6IElkZW50aWZpZXJLaW5kLlByb3BlcnR5O1xufVxuXG4vKiogRGVzY3JpYmVzIGEgbWV0aG9kIGFjY2Vzc2VkIGluIGEgdGVtcGxhdGUuICovXG5leHBvcnQgaW50ZXJmYWNlIE1ldGhvZElkZW50aWZpZXIgZXh0ZW5kcyBFeHByZXNzaW9uSWRlbnRpZmllciB7XG4gIGtpbmQ6IElkZW50aWZpZXJLaW5kLk1ldGhvZDtcbn1cblxuLyoqIERlc2NyaWJlcyBhbiBlbGVtZW50IGF0dHJpYnV0ZSBpbiBhIHRlbXBsYXRlLiAqL1xuZXhwb3J0IGludGVyZmFjZSBBdHRyaWJ1dGVJZGVudGlmaWVyIGV4dGVuZHMgVGVtcGxhdGVJZGVudGlmaWVyIHtcbiAga2luZDogSWRlbnRpZmllcktpbmQuQXR0cmlidXRlO1xufVxuXG4vKiogQSByZWZlcmVuY2UgdG8gYSBkaXJlY3RpdmUgbm9kZSBhbmQgaXRzIHNlbGVjdG9yLiAqL1xuaW50ZXJmYWNlIERpcmVjdGl2ZVJlZmVyZW5jZSB7XG4gIG5vZGU6IENsYXNzRGVjbGFyYXRpb247XG4gIHNlbGVjdG9yOiBzdHJpbmc7XG59XG4vKiogQSBiYXNlIGludGVyZmFjZSBmb3IgZWxlbWVudCBhbmQgdGVtcGxhdGUgaWRlbnRpZmllcnMuICovXG5pbnRlcmZhY2UgQmFzZUVsZW1lbnRPclRlbXBsYXRlSWRlbnRpZmllciBleHRlbmRzIFRlbXBsYXRlSWRlbnRpZmllciB7XG4gIC8qKiBBdHRyaWJ1dGVzIG9uIGFuIGVsZW1lbnQgb3IgdGVtcGxhdGUuICovXG4gIGF0dHJpYnV0ZXM6IFNldDxBdHRyaWJ1dGVJZGVudGlmaWVyPjtcblxuICAvKiogRGlyZWN0aXZlcyBhcHBsaWVkIHRvIGFuIGVsZW1lbnQgb3IgdGVtcGxhdGUuICovXG4gIHVzZWREaXJlY3RpdmVzOiBTZXQ8RGlyZWN0aXZlUmVmZXJlbmNlPjtcbn1cbi8qKlxuICogRGVzY3JpYmVzIGFuIGluZGV4ZWQgZWxlbWVudCBpbiBhIHRlbXBsYXRlLiBUaGUgbmFtZSBvZiBhbiBgRWxlbWVudElkZW50aWZpZXJgIGlzIHRoZSBlbnRpcmVcbiAqIGVsZW1lbnQgdGFnLCB3aGljaCBjYW4gYmUgcGFyc2VkIGJ5IGFuIGluZGV4ZXIgdG8gZGV0ZXJtaW5lIHdoZXJlIHVzZWQgZGlyZWN0aXZlcyBzaG91bGQgYmVcbiAqIHJlZmVyZW5jZWQuXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgRWxlbWVudElkZW50aWZpZXIgZXh0ZW5kcyBCYXNlRWxlbWVudE9yVGVtcGxhdGVJZGVudGlmaWVyIHtcbiAga2luZDogSWRlbnRpZmllcktpbmQuRWxlbWVudDtcbn1cblxuLyoqIERlc2NyaWJlcyBhbiBpbmRleGVkIHRlbXBsYXRlIG5vZGUgaW4gYSBjb21wb25lbnQgdGVtcGxhdGUgZmlsZS4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgVGVtcGxhdGVOb2RlSWRlbnRpZmllciBleHRlbmRzIEJhc2VFbGVtZW50T3JUZW1wbGF0ZUlkZW50aWZpZXIge1xuICBraW5kOiBJZGVudGlmaWVyS2luZC5UZW1wbGF0ZTtcbn1cblxuLyoqIERlc2NyaWJlcyBhIHJlZmVyZW5jZSBpbiBhIHRlbXBsYXRlIGxpa2UgXCJmb29cIiBpbiBgPGRpdiAjZm9vPjwvZGl2PmAuICovXG5leHBvcnQgaW50ZXJmYWNlIFJlZmVyZW5jZUlkZW50aWZpZXIgZXh0ZW5kcyBUZW1wbGF0ZUlkZW50aWZpZXIge1xuICBraW5kOiBJZGVudGlmaWVyS2luZC5SZWZlcmVuY2U7XG5cbiAgLyoqIFRoZSB0YXJnZXQgb2YgdGhpcyByZWZlcmVuY2UuIElmIHRoZSB0YXJnZXQgaXMgbm90IGtub3duLCB0aGlzIGlzIGBudWxsYC4gKi9cbiAgdGFyZ2V0OiB7XG4gICAgLyoqIFRoZSB0ZW1wbGF0ZSBBU1Qgbm9kZSB0aGF0IHRoZSByZWZlcmVuY2UgdGFyZ2V0cy4gKi9cbiAgICBub2RlOiBFbGVtZW50SWRlbnRpZmllcnxUZW1wbGF0ZUlkZW50aWZpZXI7XG5cbiAgICAvKipcbiAgICAgKiBUaGUgZGlyZWN0aXZlIG9uIGBub2RlYCB0aGF0IHRoZSByZWZlcmVuY2UgdGFyZ2V0cy4gSWYgbm8gZGlyZWN0aXZlIGlzIHRhcmdldGVkLCB0aGlzIGlzXG4gICAgICogYG51bGxgLlxuICAgICAqL1xuICAgIGRpcmVjdGl2ZTogQ2xhc3NEZWNsYXJhdGlvbiB8IG51bGw7XG4gIH18bnVsbDtcbn1cblxuLyoqIERlc2NyaWJlcyBhIHRlbXBsYXRlIHZhcmlhYmxlIGxpa2UgXCJmb29cIiBpbiBgPGRpdiAqbmdGb3I9XCJsZXQgZm9vIG9mIGZvb3NcIj48L2Rpdj5gLiAqL1xuZXhwb3J0IGludGVyZmFjZSBWYXJpYWJsZUlkZW50aWZpZXIgZXh0ZW5kcyBUZW1wbGF0ZUlkZW50aWZpZXIge1xuICBraW5kOiBJZGVudGlmaWVyS2luZC5WYXJpYWJsZTtcbn1cblxuLyoqXG4gKiBJZGVudGlmaWVycyByZWNvcmRlZCBhdCB0aGUgdG9wIGxldmVsIG9mIHRoZSB0ZW1wbGF0ZSwgd2l0aG91dCBhbnkgY29udGV4dCBhYm91dCB0aGUgSFRNTCBub2Rlc1xuICogdGhleSB3ZXJlIGRpc2NvdmVyZWQgaW4uXG4gKi9cbmV4cG9ydCB0eXBlIFRvcExldmVsSWRlbnRpZmllciA9IFByb3BlcnR5SWRlbnRpZmllcnxNZXRob2RJZGVudGlmaWVyfEVsZW1lbnRJZGVudGlmaWVyfFxuICAgIFRlbXBsYXRlTm9kZUlkZW50aWZpZXJ8UmVmZXJlbmNlSWRlbnRpZmllcnxWYXJpYWJsZUlkZW50aWZpZXI7XG5cbi8qKlxuICogRGVzY3JpYmVzIHRoZSBhYnNvbHV0ZSBieXRlIG9mZnNldHMgb2YgYSB0ZXh0IGFuY2hvciBpbiBhIHNvdXJjZSBjb2RlLlxuICovXG5leHBvcnQgY2xhc3MgQWJzb2x1dGVTb3VyY2VTcGFuIHtcbiAgY29uc3RydWN0b3IocHVibGljIHN0YXJ0OiBudW1iZXIsIHB1YmxpYyBlbmQ6IG51bWJlcikge31cbn1cblxuLyoqXG4gKiBEZXNjcmliZXMgYW4gYW5hbHl6ZWQsIGluZGV4ZWQgY29tcG9uZW50IGFuZCBpdHMgdGVtcGxhdGUuXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgSW5kZXhlZENvbXBvbmVudCB7XG4gIG5hbWU6IHN0cmluZztcbiAgc2VsZWN0b3I6IHN0cmluZ3xudWxsO1xuICBmaWxlOiBQYXJzZVNvdXJjZUZpbGU7XG4gIHRlbXBsYXRlOiB7XG4gICAgaWRlbnRpZmllcnM6IFNldDxUb3BMZXZlbElkZW50aWZpZXI+LFxuICAgIHVzZWRDb21wb25lbnRzOiBTZXQ8RGVjbGFyYXRpb25Ob2RlPixcbiAgICBpc0lubGluZTogYm9vbGVhbixcbiAgICBmaWxlOiBQYXJzZVNvdXJjZUZpbGU7XG4gIH07XG59XG4iXX0=