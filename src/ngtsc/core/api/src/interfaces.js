/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define("@angular/compiler-cli/src/ngtsc/core/api/src/interfaces", ["require", "exports"], factory);
    }
})(function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW50ZXJmYWNlcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL3BhY2thZ2VzL2NvbXBpbGVyLWNsaS9zcmMvbmd0c2MvY29yZS9hcGkvc3JjL2ludGVyZmFjZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztHQU1HIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IEdvb2dsZSBMTEMgQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBNSVQtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2FuZ3VsYXIuaW8vbGljZW5zZVxuICovXG5cbmltcG9ydCAqIGFzIHRzIGZyb20gJ3R5cGVzY3JpcHQnO1xuXG4vKipcbiAqIEEgaG9zdCBiYWNrZWQgYnkgYSBidWlsZCBzeXN0ZW0gd2hpY2ggaGFzIGEgdW5pZmllZCB2aWV3IG9mIHRoZSBtb2R1bGUgbmFtZXNwYWNlLlxuICpcbiAqIFN1Y2ggYSBidWlsZCBzeXN0ZW0gc3VwcG9ydHMgdGhlIGBmaWxlTmFtZVRvTW9kdWxlTmFtZWAgbWV0aG9kIHByb3ZpZGVkIGJ5IGNlcnRhaW4gYnVpbGQgc3lzdGVtXG4gKiBpbnRlZ3JhdGlvbnMgKHN1Y2ggYXMgdGhlIGludGVncmF0aW9uIHdpdGggQmF6ZWwpLiBTZWUgdGhlIGRvY3Mgb24gYGZpbGVOYW1lVG9Nb2R1bGVOYW1lYCBmb3JcbiAqIG1vcmUgZGV0YWlscy5cbiAqL1xuZXhwb3J0IGludGVyZmFjZSBVbmlmaWVkTW9kdWxlc0hvc3Qge1xuICAvKipcbiAgICogQ29udmVydHMgYSBmaWxlIHBhdGggdG8gYSBtb2R1bGUgbmFtZSB0aGF0IGNhbiBiZSB1c2VkIGFzIGFuIGBpbXBvcnQgLi4uYC5cbiAgICpcbiAgICogRm9yIGV4YW1wbGUsIHN1Y2ggYSBob3N0IG1pZ2h0IGRldGVybWluZSB0aGF0IGAvYWJzb2x1dGUvcGF0aC90by9tb25vcmVwby9saWIvaW1wb3J0ZWRGaWxlLnRzYFxuICAgKiBzaG91bGQgYmUgaW1wb3J0ZWQgdXNpbmcgYSBtb2R1bGUgc3BlY2lmaWVyIG9mIGBtb25vcmVwby9saWIvaW1wb3J0ZWRGaWxlYC5cbiAgICovXG4gIGZpbGVOYW1lVG9Nb2R1bGVOYW1lKGltcG9ydGVkRmlsZVBhdGg6IHN0cmluZywgY29udGFpbmluZ0ZpbGVQYXRoOiBzdHJpbmcpOiBzdHJpbmc7XG59XG5cbi8qKlxuICogQSBob3N0IHdoaWNoIGFkZGl0aW9uYWxseSB0cmFja3MgYW5kIHByb2R1Y2VzIFwicmVzb3VyY2VzXCIgKEhUTUwgdGVtcGxhdGVzLCBDU1NcbiAqIGZpbGVzLCBldGMpLlxuICovXG5leHBvcnQgaW50ZXJmYWNlIFJlc291cmNlSG9zdCB7XG4gIC8qKlxuICAgKiBDb252ZXJ0cyBhIGZpbGUgcGF0aCBmb3IgYSByZXNvdXJjZSB0aGF0IGlzIHVzZWQgaW4gYSBzb3VyY2UgZmlsZSBvciBhbm90aGVyIHJlc291cmNlXG4gICAqIGludG8gYSBmaWxlcGF0aC5cbiAgICpcbiAgICogVGhlIG9wdGlvbmFsIGBmYWxsYmFja1Jlc29sdmVgIG1ldGhvZCBjYW4gYmUgdXNlZCBhcyBhIHdheSB0byBhdHRlbXB0IGEgZmFsbGJhY2sgcmVzb2x1dGlvbiBpZlxuICAgKiB0aGUgaW1wbGVtZW50YXRpb24ncyBgcmVzb3VyY2VOYW1lVG9GaWxlTmFtZWAgcmVzb2x1dGlvbiBmYWlscy5cbiAgICovXG4gIHJlc291cmNlTmFtZVRvRmlsZU5hbWUoXG4gICAgICByZXNvdXJjZU5hbWU6IHN0cmluZywgY29udGFpbmluZ0ZpbGVQYXRoOiBzdHJpbmcsXG4gICAgICBmYWxsYmFja1Jlc29sdmU/OiAodXJsOiBzdHJpbmcsIGZyb21GaWxlOiBzdHJpbmcpID0+IHN0cmluZyB8IG51bGwpOiBzdHJpbmd8bnVsbDtcblxuICAvKipcbiAgICogTG9hZCBhIHJlZmVyZW5jZWQgcmVzb3VyY2UgZWl0aGVyIHN0YXRpY2FsbHkgb3IgYXN5bmNocm9ub3VzbHkuIElmIHRoZSBob3N0IHJldHVybnMgYVxuICAgKiBgUHJvbWlzZTxzdHJpbmc+YCBpdCBpcyBhc3N1bWVkIHRoZSB1c2VyIG9mIHRoZSBjb3JyZXNwb25kaW5nIGBQcm9ncmFtYCB3aWxsIGNhbGxcbiAgICogYGxvYWROZ1N0cnVjdHVyZUFzeW5jKClgLiBSZXR1cm5pbmcgIGBQcm9taXNlPHN0cmluZz5gIG91dHNpZGUgYGxvYWROZ1N0cnVjdHVyZUFzeW5jKClgIHdpbGxcbiAgICogY2F1c2UgYSBkaWFnbm9zdGljcyBlcnJvciBvciBhbiBleGNlcHRpb24gdG8gYmUgdGhyb3duLlxuICAgKi9cbiAgcmVhZFJlc291cmNlKGZpbGVOYW1lOiBzdHJpbmcpOiBQcm9taXNlPHN0cmluZz58c3RyaW5nO1xuXG4gIC8qKlxuICAgKiBHZXQgdGhlIGFic29sdXRlIHBhdGhzIHRvIHRoZSBjaGFuZ2VkIGZpbGVzIHRoYXQgdHJpZ2dlcmVkIHRoZSBjdXJyZW50IGNvbXBpbGF0aW9uXG4gICAqIG9yIGB1bmRlZmluZWRgIGlmIHRoaXMgaXMgbm90IGFuIGluY3JlbWVudGFsIGJ1aWxkLlxuICAgKi9cbiAgZ2V0TW9kaWZpZWRSZXNvdXJjZUZpbGVzPygpOiBTZXQ8c3RyaW5nPnx1bmRlZmluZWQ7XG5cbiAgLyoqXG4gICAqIFRyYW5zZm9ybSBhbiBpbmxpbmUgb3IgZXh0ZXJuYWwgcmVzb3VyY2UgYXN5bmNocm9ub3VzbHkuXG4gICAqIEl0IGlzIGFzc3VtZWQgdGhlIGNvbnN1bWVyIG9mIHRoZSBjb3JyZXNwb25kaW5nIGBQcm9ncmFtYCB3aWxsIGNhbGxcbiAgICogYGxvYWROZ1N0cnVjdHVyZUFzeW5jKClgLiBVc2luZyBvdXRzaWRlIGBsb2FkTmdTdHJ1Y3R1cmVBc3luYygpYCB3aWxsXG4gICAqIGNhdXNlIGEgZGlhZ25vc3RpY3MgZXJyb3Igb3IgYW4gZXhjZXB0aW9uIHRvIGJlIHRocm93bi5cbiAgICogT25seSBzdHlsZSByZXNvdXJjZXMgYXJlIGN1cnJlbnRseSBzdXBwb3J0ZWQuXG4gICAqXG4gICAqIEBwYXJhbSBkYXRhIFRoZSByZXNvdXJjZSBkYXRhIHRvIHRyYW5zZm9ybS5cbiAgICogQHBhcmFtIGNvbnRleHQgSW5mb3JtYXRpb24gcmVnYXJkaW5nIHRoZSByZXNvdXJjZSBzdWNoIGFzIHRoZSB0eXBlIGFuZCBjb250YWluaW5nIGZpbGUuXG4gICAqIEByZXR1cm5zIEEgcHJvbWlzZSBvZiBlaXRoZXIgdGhlIHRyYW5zZm9ybWVkIHJlc291cmNlIGRhdGEgb3IgbnVsbCBpZiBubyB0cmFuc2Zvcm1hdGlvbiBvY2N1cnMuXG4gICAqL1xuICB0cmFuc2Zvcm1SZXNvdXJjZT9cbiAgICAgIChkYXRhOiBzdHJpbmcsIGNvbnRleHQ6IFJlc291cmNlSG9zdENvbnRleHQpOiBQcm9taXNlPFRyYW5zZm9ybVJlc291cmNlUmVzdWx0fG51bGw+O1xufVxuXG4vKipcbiAqIENvbnRleHR1YWwgaW5mb3JtYXRpb24gdXNlZCBieSBtZW1iZXJzIG9mIHRoZSBSZXNvdXJjZUhvc3QgaW50ZXJmYWNlLlxuICovXG5leHBvcnQgaW50ZXJmYWNlIFJlc291cmNlSG9zdENvbnRleHQge1xuICAvKipcbiAgICogVGhlIHR5cGUgb2YgdGhlIGNvbXBvbmVudCByZXNvdXJjZS4gVGVtcGxhdGVzIGFyZSBub3QgeWV0IHN1cHBvcnRlZC5cbiAgICogKiBSZXNvdXJjZXMgcmVmZXJlbmNlZCB2aWEgYSBjb21wb25lbnQncyBgc3R5bGVzYCBvciBgc3R5bGVVcmxzYCBwcm9wZXJ0aWVzIGFyZSBvZlxuICAgKiB0eXBlIGBzdHlsZWAuXG4gICAqL1xuICByZWFkb25seSB0eXBlOiAnc3R5bGUnO1xuICAvKipcbiAgICogVGhlIGFic29sdXRlIHBhdGggdG8gdGhlIHJlc291cmNlIGZpbGUuIElmIHRoZSByZXNvdXJjZSBpcyBpbmxpbmUsIHRoZSB2YWx1ZSB3aWxsIGJlIG51bGwuXG4gICAqL1xuICByZWFkb25seSByZXNvdXJjZUZpbGU6IHN0cmluZ3xudWxsO1xuICAvKipcbiAgICogVGhlIGFic29sdXRlIHBhdGggdG8gdGhlIGZpbGUgdGhhdCBjb250YWlucyB0aGUgcmVzb3VyY2Ugb3IgcmVmZXJlbmNlIHRvIHRoZSByZXNvdXJjZS5cbiAgICovXG4gIHJlYWRvbmx5IGNvbnRhaW5pbmdGaWxlOiBzdHJpbmc7XG59XG5cbi8qKlxuICogVGhlIHN1Y2Nlc3NmdWwgdHJhbnNmb3JtYXRpb24gcmVzdWx0IG9mIHRoZSBgUmVzb3VyY2VIb3N0LnRyYW5zZm9ybVJlc291cmNlYCBmdW5jdGlvbi5cbiAqIFRoaXMgaW50ZXJmYWNlIG1heSBiZSBleHBhbmRlZCBpbiB0aGUgZnV0dXJlIHRvIGluY2x1ZGUgZGlhZ25vc3RpYyBpbmZvcm1hdGlvbiBhbmQgc291cmNlIG1hcHBpbmdcbiAqIHN1cHBvcnQuXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgVHJhbnNmb3JtUmVzb3VyY2VSZXN1bHQge1xuICAvKipcbiAgICogVGhlIGNvbnRlbnQgZ2VuZXJhdGVkIGJ5IHRoZSB0cmFuc2Zvcm1hdGlvbi5cbiAgICovXG4gIGNvbnRlbnQ6IHN0cmluZztcbn1cblxuLyoqXG4gKiBBIGB0cy5Db21waWxlckhvc3RgIGludGVyZmFjZSB3aGljaCBzdXBwb3J0cyBzb21lIG51bWJlciBvZiBvcHRpb25hbCBtZXRob2RzIGluIGFkZGl0aW9uIHRvIHRoZVxuICogY29yZSBpbnRlcmZhY2UuXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgRXh0ZW5kZWRUc0NvbXBpbGVySG9zdCBleHRlbmRzIHRzLkNvbXBpbGVySG9zdCwgUGFydGlhbDxSZXNvdXJjZUhvc3Q+LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgUGFydGlhbDxVbmlmaWVkTW9kdWxlc0hvc3Q+IHt9XG5cbmV4cG9ydCBpbnRlcmZhY2UgTGF6eVJvdXRlIHtcbiAgcm91dGU6IHN0cmluZztcbiAgbW9kdWxlOiB7bmFtZTogc3RyaW5nLCBmaWxlUGF0aDogc3RyaW5nfTtcbiAgcmVmZXJlbmNlZE1vZHVsZToge25hbWU6IHN0cmluZywgZmlsZVBhdGg6IHN0cmluZ307XG59XG4iXX0=