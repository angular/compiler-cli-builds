/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
import { declarationFunctions } from './partial_linkers/partial_linker_selector';
/**
 * Determines if the provided source file may need to be processed by the linker, i.e. whether it
 * potentially contains any declarations. If true is returned, then the source file should be
 * processed by the linker as it may contain declarations that need to be fully compiled. If false
 * is returned, parsing and processing of the source file can safely be skipped to improve
 * performance.
 *
 * This function may return true even for source files that don't actually contain any declarations
 * that need to be compiled.
 *
 * @param path the absolute path of the source file for which to determine whether linking may be
 * needed.
 * @param source the source file content as a string.
 * @returns whether the source file may contain declarations that need to be linked.
 */
export function needsLinking(path, source) {
    return declarationFunctions.some(fn => source.includes(fn));
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmVlZHNfbGlua2luZy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL3BhY2thZ2VzL2NvbXBpbGVyLWNsaS9saW5rZXIvc3JjL2ZpbGVfbGlua2VyL25lZWRzX2xpbmtpbmcudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztHQU1HO0FBRUgsT0FBTyxFQUFDLG9CQUFvQixFQUFDLE1BQU0sMkNBQTJDLENBQUM7QUFFL0U7Ozs7Ozs7Ozs7Ozs7O0dBY0c7QUFDSCxNQUFNLFVBQVUsWUFBWSxDQUFDLElBQVksRUFBRSxNQUFjO0lBQ3ZELE9BQU8sb0JBQW9CLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO0FBQzlELENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgR29vZ2xlIExMQyBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IGFuIE1JVC1zdHlsZSBsaWNlbnNlIHRoYXQgY2FuIGJlXG4gKiBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGF0IGh0dHBzOi8vYW5ndWxhci5pby9saWNlbnNlXG4gKi9cblxuaW1wb3J0IHtkZWNsYXJhdGlvbkZ1bmN0aW9uc30gZnJvbSAnLi9wYXJ0aWFsX2xpbmtlcnMvcGFydGlhbF9saW5rZXJfc2VsZWN0b3InO1xuXG4vKipcbiAqIERldGVybWluZXMgaWYgdGhlIHByb3ZpZGVkIHNvdXJjZSBmaWxlIG1heSBuZWVkIHRvIGJlIHByb2Nlc3NlZCBieSB0aGUgbGlua2VyLCBpLmUuIHdoZXRoZXIgaXRcbiAqIHBvdGVudGlhbGx5IGNvbnRhaW5zIGFueSBkZWNsYXJhdGlvbnMuIElmIHRydWUgaXMgcmV0dXJuZWQsIHRoZW4gdGhlIHNvdXJjZSBmaWxlIHNob3VsZCBiZVxuICogcHJvY2Vzc2VkIGJ5IHRoZSBsaW5rZXIgYXMgaXQgbWF5IGNvbnRhaW4gZGVjbGFyYXRpb25zIHRoYXQgbmVlZCB0byBiZSBmdWxseSBjb21waWxlZC4gSWYgZmFsc2VcbiAqIGlzIHJldHVybmVkLCBwYXJzaW5nIGFuZCBwcm9jZXNzaW5nIG9mIHRoZSBzb3VyY2UgZmlsZSBjYW4gc2FmZWx5IGJlIHNraXBwZWQgdG8gaW1wcm92ZVxuICogcGVyZm9ybWFuY2UuXG4gKlxuICogVGhpcyBmdW5jdGlvbiBtYXkgcmV0dXJuIHRydWUgZXZlbiBmb3Igc291cmNlIGZpbGVzIHRoYXQgZG9uJ3QgYWN0dWFsbHkgY29udGFpbiBhbnkgZGVjbGFyYXRpb25zXG4gKiB0aGF0IG5lZWQgdG8gYmUgY29tcGlsZWQuXG4gKlxuICogQHBhcmFtIHBhdGggdGhlIGFic29sdXRlIHBhdGggb2YgdGhlIHNvdXJjZSBmaWxlIGZvciB3aGljaCB0byBkZXRlcm1pbmUgd2hldGhlciBsaW5raW5nIG1heSBiZVxuICogbmVlZGVkLlxuICogQHBhcmFtIHNvdXJjZSB0aGUgc291cmNlIGZpbGUgY29udGVudCBhcyBhIHN0cmluZy5cbiAqIEByZXR1cm5zIHdoZXRoZXIgdGhlIHNvdXJjZSBmaWxlIG1heSBjb250YWluIGRlY2xhcmF0aW9ucyB0aGF0IG5lZWQgdG8gYmUgbGlua2VkLlxuICovXG5leHBvcnQgZnVuY3Rpb24gbmVlZHNMaW5raW5nKHBhdGg6IHN0cmluZywgc291cmNlOiBzdHJpbmcpOiBib29sZWFuIHtcbiAgcmV0dXJuIGRlY2xhcmF0aW9uRnVuY3Rpb25zLnNvbWUoZm4gPT4gc291cmNlLmluY2x1ZGVzKGZuKSk7XG59XG4iXX0=