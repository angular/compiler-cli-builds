import { FatalLinkerError } from './fatal_linker_error';
/**
 * A class that is used to generate imports when translating from Angular Output AST to an AST to
 * render, such as Babel.
 *
 * Note that, in the linker, there can only be imports from `@angular/core` and that these imports
 * must be achieved by property access on an `ng` namespace identifer, which is passed in via the
 * constructor.
 */
export class LinkerImportGenerator {
    constructor(ngImport) {
        this.ngImport = ngImport;
    }
    generateNamespaceImport(moduleName) {
        this.assertModuleName(moduleName);
        return this.ngImport;
    }
    generateNamedImport(moduleName, originalSymbol) {
        this.assertModuleName(moduleName);
        return { moduleImport: this.ngImport, symbol: originalSymbol };
    }
    assertModuleName(moduleName) {
        if (moduleName !== '@angular/core') {
            throw new FatalLinkerError(this.ngImport, `Unable to import from anything other than '@angular/core'`);
        }
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlua2VyX2ltcG9ydF9nZW5lcmF0b3IuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9wYWNrYWdlcy9jb21waWxlci1jbGkvbGlua2VyL3NyYy9saW5rZXJfaW1wb3J0X2dlbmVyYXRvci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFRQSxPQUFPLEVBQUMsZ0JBQWdCLEVBQUMsTUFBTSxzQkFBc0IsQ0FBQztBQUV0RDs7Ozs7OztHQU9HO0FBQ0gsTUFBTSxPQUFPLHFCQUFxQjtJQUNoQyxZQUFvQixRQUFxQjtRQUFyQixhQUFRLEdBQVIsUUFBUSxDQUFhO0lBQUcsQ0FBQztJQUU3Qyx1QkFBdUIsQ0FBQyxVQUFrQjtRQUN4QyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDbEMsT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDO0lBQ3ZCLENBQUM7SUFFRCxtQkFBbUIsQ0FBQyxVQUFrQixFQUFFLGNBQXNCO1FBQzVELElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxVQUFVLENBQUMsQ0FBQztRQUNsQyxPQUFPLEVBQUMsWUFBWSxFQUFFLElBQUksQ0FBQyxRQUFRLEVBQUUsTUFBTSxFQUFFLGNBQWMsRUFBQyxDQUFDO0lBQy9ELENBQUM7SUFFTyxnQkFBZ0IsQ0FBQyxVQUFrQjtRQUN6QyxJQUFJLFVBQVUsS0FBSyxlQUFlLEVBQUU7WUFDbEMsTUFBTSxJQUFJLGdCQUFnQixDQUN0QixJQUFJLENBQUMsUUFBUSxFQUFFLDJEQUEyRCxDQUFDLENBQUM7U0FDakY7SUFDSCxDQUFDO0NBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgR29vZ2xlIExMQyBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IGFuIE1JVC1zdHlsZSBsaWNlbnNlIHRoYXQgY2FuIGJlXG4gKiBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGF0IGh0dHBzOi8vYW5ndWxhci5pby9saWNlbnNlXG4gKi9cbmltcG9ydCB7SW1wb3J0R2VuZXJhdG9yLCBOYW1lZEltcG9ydH0gZnJvbSAnLi4vLi4vc3JjL25ndHNjL3RyYW5zbGF0b3InO1xuaW1wb3J0IHtGYXRhbExpbmtlckVycm9yfSBmcm9tICcuL2ZhdGFsX2xpbmtlcl9lcnJvcic7XG5cbi8qKlxuICogQSBjbGFzcyB0aGF0IGlzIHVzZWQgdG8gZ2VuZXJhdGUgaW1wb3J0cyB3aGVuIHRyYW5zbGF0aW5nIGZyb20gQW5ndWxhciBPdXRwdXQgQVNUIHRvIGFuIEFTVCB0b1xuICogcmVuZGVyLCBzdWNoIGFzIEJhYmVsLlxuICpcbiAqIE5vdGUgdGhhdCwgaW4gdGhlIGxpbmtlciwgdGhlcmUgY2FuIG9ubHkgYmUgaW1wb3J0cyBmcm9tIGBAYW5ndWxhci9jb3JlYCBhbmQgdGhhdCB0aGVzZSBpbXBvcnRzXG4gKiBtdXN0IGJlIGFjaGlldmVkIGJ5IHByb3BlcnR5IGFjY2VzcyBvbiBhbiBgbmdgIG5hbWVzcGFjZSBpZGVudGlmZXIsIHdoaWNoIGlzIHBhc3NlZCBpbiB2aWEgdGhlXG4gKiBjb25zdHJ1Y3Rvci5cbiAqL1xuZXhwb3J0IGNsYXNzIExpbmtlckltcG9ydEdlbmVyYXRvcjxURXhwcmVzc2lvbj4gaW1wbGVtZW50cyBJbXBvcnRHZW5lcmF0b3I8VEV4cHJlc3Npb24+IHtcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBuZ0ltcG9ydDogVEV4cHJlc3Npb24pIHt9XG5cbiAgZ2VuZXJhdGVOYW1lc3BhY2VJbXBvcnQobW9kdWxlTmFtZTogc3RyaW5nKTogVEV4cHJlc3Npb24ge1xuICAgIHRoaXMuYXNzZXJ0TW9kdWxlTmFtZShtb2R1bGVOYW1lKTtcbiAgICByZXR1cm4gdGhpcy5uZ0ltcG9ydDtcbiAgfVxuXG4gIGdlbmVyYXRlTmFtZWRJbXBvcnQobW9kdWxlTmFtZTogc3RyaW5nLCBvcmlnaW5hbFN5bWJvbDogc3RyaW5nKTogTmFtZWRJbXBvcnQ8VEV4cHJlc3Npb24+IHtcbiAgICB0aGlzLmFzc2VydE1vZHVsZU5hbWUobW9kdWxlTmFtZSk7XG4gICAgcmV0dXJuIHttb2R1bGVJbXBvcnQ6IHRoaXMubmdJbXBvcnQsIHN5bWJvbDogb3JpZ2luYWxTeW1ib2x9O1xuICB9XG5cbiAgcHJpdmF0ZSBhc3NlcnRNb2R1bGVOYW1lKG1vZHVsZU5hbWU6IHN0cmluZyk6IHZvaWQge1xuICAgIGlmIChtb2R1bGVOYW1lICE9PSAnQGFuZ3VsYXIvY29yZScpIHtcbiAgICAgIHRocm93IG5ldyBGYXRhbExpbmtlckVycm9yKFxuICAgICAgICAgIHRoaXMubmdJbXBvcnQsIGBVbmFibGUgdG8gaW1wb3J0IGZyb20gYW55dGhpbmcgb3RoZXIgdGhhbiAnQGFuZ3VsYXIvY29yZSdgKTtcbiAgICB9XG4gIH1cbn1cbiJdfQ==